{"remainingRequest":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/ts-loader/index.js??ref--9-3!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular-router-loader/src/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/tslint-loader/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/core/login/login.service.ts","dependencies":[{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/core/login/login.service.ts","mtime":1574745906078},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular2-template-loader/index.js","mtime":1574745900106},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/cache-loader/dist/cjs.js","mtime":1574745900714},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/thread-loader/dist/cjs.js","mtime":1574745905138},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/ts-loader/index.js","mtime":1574745905158},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular-router-loader/src/index.js","mtime":1574745900106},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/tslint-loader/index.js","mtime":1574745905162}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar account_service_1 = require(\"app/core/auth/account.service\");\nvar auth_session_service_1 = require(\"app/core/auth/auth-session.service\");\nvar LoginService = /** @class */ (function () {\n    function LoginService(accountService, authServerProvider) {\n        this.accountService = accountService;\n        this.authServerProvider = authServerProvider;\n    }\n    LoginService.prototype.login = function () {\n        var port = location.port ? ':' + location.port : '';\n        location.href = '//' + location.hostname + port + location.pathname + 'login';\n    };\n    LoginService.prototype.logout = function () {\n        this.authServerProvider.logout().subscribe(function (response) {\n            var data = response.body;\n            var logoutUrl = data.logoutUrl;\n            // if Keycloak, uri has protocol/openid-connect/token\n            if (logoutUrl.indexOf('/protocol') > -1) {\n                logoutUrl = logoutUrl + '?redirect_uri=' + window.location.origin;\n            }\n            else {\n                // Okta\n                logoutUrl = logoutUrl + '?id_token_hint=' + data.idToken + '&post_logout_redirect_uri=' + window.location.origin;\n            }\n            window.location.href = logoutUrl;\n        });\n    };\n    var _a, _b;\n    LoginService = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof auth_session_service_1.AuthServerProvider !== \"undefined\" && auth_session_service_1.AuthServerProvider) === \"function\" ? _b : Object])\n    ], LoginService);\n    return LoginService;\n}());\nexports.LoginService = LoginService;\n",{"version":3,"file":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/core/login/login.service.ts","sourceRoot":"","sources":["/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular-router-loader/src/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/tslint-loader/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/core/login/login.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAE3C,iEAA+D;AAC/D,2EAAwE;AAGxE;IACI,sBAAoB,cAA8B,EAAU,kBAAsC;QAA9E,mBAAc,GAAd,cAAc,CAAgB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEtG,4BAAK,GAAL;QACI,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACtD,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC;IAClF,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAA,QAAQ;YAC/C,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC3B,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC/B,qDAAqD;YACrD,IAAI,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;gBACrC,SAAS,GAAG,SAAS,GAAG,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;aACrE;iBAAM;gBACH,OAAO;gBACP,SAAS,GAAG,SAAS,GAAG,iBAAiB,GAAG,IAAI,CAAC,OAAO,GAAG,4BAA4B,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;aACpH;YACD,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;;IArBQ,YAAY;QADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEK,gCAAc,oBAAd,gCAAc,oDAA8B,yCAAkB,oBAAlB,yCAAkB;OADzF,YAAY,CAsBxB;IAAD,mBAAC;CAAA,AAtBD,IAsBC;AAtBY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { AuthServerProvider } from 'app/core/auth/auth-session.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n    constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\n\n    login() {\n        const port = location.port ? ':' + location.port : '';\n        location.href = '//' + location.hostname + port + location.pathname + 'login';\n    }\n\n    logout() {\n        this.authServerProvider.logout().subscribe(response => {\n            const data = response.body;\n            let logoutUrl = data.logoutUrl;\n            // if Keycloak, uri has protocol/openid-connect/token\n            if (logoutUrl.indexOf('/protocol') > -1) {\n                logoutUrl = logoutUrl + '?redirect_uri=' + window.location.origin;\n            } else {\n                // Okta\n                logoutUrl = logoutUrl + '?id_token_hint=' + data.idToken + '&post_logout_redirect_uri=' + window.location.origin;\n            }\n            window.location.href = logoutUrl;\n        });\n    }\n}\n"]}]}