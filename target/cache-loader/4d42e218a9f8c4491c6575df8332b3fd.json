{"remainingRequest":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/ts-loader/index.js??ref--9-3!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular-router-loader/src/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/tslint-loader/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","dependencies":[{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","mtime":1574745906078},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular2-template-loader/index.js","mtime":1574745900106},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/cache-loader/dist/cjs.js","mtime":1574745900714},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/thread-loader/dist/cjs.js","mtime":1574745905138},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/ts-loader/index.js","mtime":1574745905158},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular-router-loader/src/index.js","mtime":1574745900106},{"path":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/tslint-loader/index.js","mtime":1574745905162}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar operators_1 = require(\"rxjs/operators\");\nvar login_service_1 = require(\"app/core/login/login.service\");\nvar state_storage_service_1 = require(\"app/core/auth/state-storage.service\");\nvar AuthExpiredInterceptor = /** @class */ (function () {\n    function AuthExpiredInterceptor(stateStorageService, loginService) {\n        this.stateStorageService = stateStorageService;\n        this.loginService = loginService;\n    }\n    AuthExpiredInterceptor.prototype.intercept = function (request, next) {\n        var _this = this;\n        return next.handle(request).pipe(operators_1.tap(function (event) { }, function (err) {\n            if (err instanceof http_1.HttpErrorResponse) {\n                if (err.status === 401 && err.url && !err.url.includes('/api/account')) {\n                    var destination = _this.stateStorageService.getDestinationState();\n                    if (destination !== null) {\n                        var to = destination.destination;\n                        var toParams = destination.params;\n                        if (to.name === 'accessdenied') {\n                            _this.stateStorageService.storePreviousState(to.name, toParams);\n                        }\n                    }\n                    else {\n                        _this.stateStorageService.storeUrl('/');\n                    }\n                    _this.loginService.login();\n                }\n            }\n        }));\n    };\n    var _a, _b;\n    AuthExpiredInterceptor = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof state_storage_service_1.StateStorageService !== \"undefined\" && state_storage_service_1.StateStorageService) === \"function\" ? _a : Object, typeof (_b = typeof login_service_1.LoginService !== \"undefined\" && login_service_1.LoginService) === \"function\" ? _b : Object])\n    ], AuthExpiredInterceptor);\n    return AuthExpiredInterceptor;\n}());\nexports.AuthExpiredInterceptor = AuthExpiredInterceptor;\n",{"version":3,"file":"/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","sourceRoot":"","sources":["/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/angular-router-loader/src/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/node_modules/tslint-loader/index.js!/home/abilash-diviso/001-eclipse-workspace/001-Graeshoppe/restcustomergateway/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAA+G;AAE/G,4CAAqC;AACrC,8DAA4D;AAC5D,6EAA0E;AAG1E;IACI,gCAAoB,mBAAwC,EAAU,YAA0B;QAA5E,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAEpG,0CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAwBC;QAvBG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5B,eAAG,CACC,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACL,IAAI,GAAG,YAAY,wBAAiB,EAAE;gBAClC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBACpE,IAAM,WAAW,GAAG,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;oBACnE,IAAI,WAAW,KAAK,IAAI,EAAE;wBACtB,IAAM,EAAE,GAAG,WAAW,CAAC,WAAW,CAAC;wBACnC,IAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC;wBACpC,IAAI,EAAE,CAAC,IAAI,KAAK,cAAc,EAAE;4BAC5B,KAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;yBAClE;qBACJ;yBAAM;wBACH,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;qBAC1C;oBAED,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;iBAC7B;aACJ;QACL,CAAC,CACJ,CACJ,CAAC;IACN,CAAC;;IA3BQ,sBAAsB;QADlC,iBAAU,EAAE;qEAEgC,2CAAmB,oBAAnB,2CAAmB,oDAAwB,4BAAY,oBAAZ,4BAAY;OADvF,sBAAsB,CA4BlC;IAAD,6BAAC;CAAA,AA5BD,IA4BC;AA5BY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LoginService } from 'app/core/login/login.service';\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\n\n@Injectable()\nexport class AuthExpiredInterceptor implements HttpInterceptor {\n    constructor(private stateStorageService: StateStorageService, private loginService: LoginService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            tap(\n                (event: HttpEvent<any>) => {},\n                (err: any) => {\n                    if (err instanceof HttpErrorResponse) {\n                        if (err.status === 401 && err.url && !err.url.includes('/api/account')) {\n                            const destination = this.stateStorageService.getDestinationState();\n                            if (destination !== null) {\n                                const to = destination.destination;\n                                const toParams = destination.params;\n                                if (to.name === 'accessdenied') {\n                                    this.stateStorageService.storePreviousState(to.name, toParams);\n                                }\n                            } else {\n                                this.stateStorageService.storeUrl('/');\n                            }\n\n                            this.loginService.login();\n                        }\n                    }\n                }\n            )\n        );\n    }\n}\n"]}]}