/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.notification.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Notification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2621894451755164979L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Notification\",\"namespace\":\"com.diviso.graeshoppe.notification.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"targetId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"image\",\"type\":\"bytes\",\"default\":\"Ã¿\"},{\"name\":\"imageContentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"date\",\"type\":\"long\",\"logicalType\":\"date\"},{\"name\":\"receiverId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Notification> ENCODER =
      new BinaryMessageEncoder<Notification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Notification> DECODER =
      new BinaryMessageDecoder<Notification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Notification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Notification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Notification>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Notification to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Notification from a ByteBuffer. */
  public static Notification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long id;
  @Deprecated public java.lang.String title;
  @Deprecated public java.lang.String message;
  @Deprecated public java.lang.String targetId;
  @Deprecated public java.lang.String type;
  @Deprecated public java.nio.ByteBuffer image;
  @Deprecated public java.lang.String imageContentType;
  @Deprecated public long date;
  @Deprecated public java.lang.String receiverId;
  @Deprecated public java.lang.String status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Notification() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param title The new value for title
   * @param message The new value for message
   * @param targetId The new value for targetId
   * @param type The new value for type
   * @param image The new value for image
   * @param imageContentType The new value for imageContentType
   * @param date The new value for date
   * @param receiverId The new value for receiverId
   * @param status The new value for status
   */
  public Notification(java.lang.Long id, java.lang.String title, java.lang.String message, java.lang.String targetId, java.lang.String type, java.nio.ByteBuffer image, java.lang.String imageContentType, java.lang.Long date, java.lang.String receiverId, java.lang.String status) {
    this.id = id;
    this.title = title;
    this.message = message;
    this.targetId = targetId;
    this.type = type;
    this.image = image;
    this.imageContentType = imageContentType;
    this.date = date;
    this.receiverId = receiverId;
    this.status = status;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return title;
    case 2: return message;
    case 3: return targetId;
    case 4: return type;
    case 5: return image;
    case 6: return imageContentType;
    case 7: return date;
    case 8: return receiverId;
    case 9: return status;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: title = (java.lang.String)value$; break;
    case 2: message = (java.lang.String)value$; break;
    case 3: targetId = (java.lang.String)value$; break;
    case 4: type = (java.lang.String)value$; break;
    case 5: image = (java.nio.ByteBuffer)value$; break;
    case 6: imageContentType = (java.lang.String)value$; break;
    case 7: date = (java.lang.Long)value$; break;
    case 8: receiverId = (java.lang.String)value$; break;
    case 9: status = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'targetId' field.
   * @return The value of the 'targetId' field.
   */
  public java.lang.String getTargetId() {
    return targetId;
  }

  /**
   * Sets the value of the 'targetId' field.
   * @param value the value to set.
   */
  public void setTargetId(java.lang.String value) {
    this.targetId = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'image' field.
   * @return The value of the 'image' field.
   */
  public java.nio.ByteBuffer getImage() {
    return image;
  }

  /**
   * Sets the value of the 'image' field.
   * @param value the value to set.
   */
  public void setImage(java.nio.ByteBuffer value) {
    this.image = value;
  }

  /**
   * Gets the value of the 'imageContentType' field.
   * @return The value of the 'imageContentType' field.
   */
  public java.lang.String getImageContentType() {
    return imageContentType;
  }

  /**
   * Sets the value of the 'imageContentType' field.
   * @param value the value to set.
   */
  public void setImageContentType(java.lang.String value) {
    this.imageContentType = value;
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.Long getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.Long value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'receiverId' field.
   * @return The value of the 'receiverId' field.
   */
  public java.lang.String getReceiverId() {
    return receiverId;
  }

  /**
   * Sets the value of the 'receiverId' field.
   * @param value the value to set.
   */
  public void setReceiverId(java.lang.String value) {
    this.receiverId = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Creates a new Notification RecordBuilder.
   * @return A new Notification RecordBuilder
   */
  public static com.diviso.graeshoppe.notification.avro.Notification.Builder newBuilder() {
    return new com.diviso.graeshoppe.notification.avro.Notification.Builder();
  }

  /**
   * Creates a new Notification RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Notification RecordBuilder
   */
  public static com.diviso.graeshoppe.notification.avro.Notification.Builder newBuilder(com.diviso.graeshoppe.notification.avro.Notification.Builder other) {
    return new com.diviso.graeshoppe.notification.avro.Notification.Builder(other);
  }

  /**
   * Creates a new Notification RecordBuilder by copying an existing Notification instance.
   * @param other The existing instance to copy.
   * @return A new Notification RecordBuilder
   */
  public static com.diviso.graeshoppe.notification.avro.Notification.Builder newBuilder(com.diviso.graeshoppe.notification.avro.Notification other) {
    return new com.diviso.graeshoppe.notification.avro.Notification.Builder(other);
  }

  /**
   * RecordBuilder for Notification instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Notification>
    implements org.apache.avro.data.RecordBuilder<Notification> {

    private long id;
    private java.lang.String title;
    private java.lang.String message;
    private java.lang.String targetId;
    private java.lang.String type;
    private java.nio.ByteBuffer image;
    private java.lang.String imageContentType;
    private long date;
    private java.lang.String receiverId;
    private java.lang.String status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.notification.avro.Notification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.targetId)) {
        this.targetId = data().deepCopy(fields()[3].schema(), other.targetId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.image)) {
        this.image = data().deepCopy(fields()[5].schema(), other.image);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.imageContentType)) {
        this.imageContentType = data().deepCopy(fields()[6].schema(), other.imageContentType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.date)) {
        this.date = data().deepCopy(fields()[7].schema(), other.date);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.receiverId)) {
        this.receiverId = data().deepCopy(fields()[8].schema(), other.receiverId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Notification instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.notification.avro.Notification other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.targetId)) {
        this.targetId = data().deepCopy(fields()[3].schema(), other.targetId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.image)) {
        this.image = data().deepCopy(fields()[5].schema(), other.image);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.imageContentType)) {
        this.imageContentType = data().deepCopy(fields()[6].schema(), other.imageContentType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.date)) {
        this.date = data().deepCopy(fields()[7].schema(), other.date);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.receiverId)) {
        this.receiverId = data().deepCopy(fields()[8].schema(), other.receiverId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.title = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearTitle() {
      title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }

    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setMessage(java.lang.String value) {
      validate(fields()[2], value);
      this.message = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearMessage() {
      message = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetId' field.
      * @return The value.
      */
    public java.lang.String getTargetId() {
      return targetId;
    }

    /**
      * Sets the value of the 'targetId' field.
      * @param value The value of 'targetId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setTargetId(java.lang.String value) {
      validate(fields()[3], value);
      this.targetId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'targetId' field has been set.
      * @return True if the 'targetId' field has been set, false otherwise.
      */
    public boolean hasTargetId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'targetId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearTargetId() {
      targetId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setType(java.lang.String value) {
      validate(fields()[4], value);
      this.type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearType() {
      type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'image' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getImage() {
      return image;
    }

    /**
      * Sets the value of the 'image' field.
      * @param value The value of 'image'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setImage(java.nio.ByteBuffer value) {
      validate(fields()[5], value);
      this.image = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'image' field has been set.
      * @return True if the 'image' field has been set, false otherwise.
      */
    public boolean hasImage() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'image' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearImage() {
      image = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'imageContentType' field.
      * @return The value.
      */
    public java.lang.String getImageContentType() {
      return imageContentType;
    }

    /**
      * Sets the value of the 'imageContentType' field.
      * @param value The value of 'imageContentType'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setImageContentType(java.lang.String value) {
      validate(fields()[6], value);
      this.imageContentType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'imageContentType' field has been set.
      * @return True if the 'imageContentType' field has been set, false otherwise.
      */
    public boolean hasImageContentType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'imageContentType' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearImageContentType() {
      imageContentType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.Long getDate() {
      return date;
    }

    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setDate(long value) {
      validate(fields()[7], value);
      this.date = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearDate() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiverId' field.
      * @return The value.
      */
    public java.lang.String getReceiverId() {
      return receiverId;
    }

    /**
      * Sets the value of the 'receiverId' field.
      * @param value The value of 'receiverId'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setReceiverId(java.lang.String value) {
      validate(fields()[8], value);
      this.receiverId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'receiverId' field has been set.
      * @return True if the 'receiverId' field has been set, false otherwise.
      */
    public boolean hasReceiverId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'receiverId' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearReceiverId() {
      receiverId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder setStatus(java.lang.String value) {
      validate(fields()[9], value);
      this.status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.notification.avro.Notification.Builder clearStatus() {
      status = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Notification build() {
      try {
        Notification record = new Notification();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.title = fieldSetFlags()[1] ? this.title : (java.lang.String) defaultValue(fields()[1]);
        record.message = fieldSetFlags()[2] ? this.message : (java.lang.String) defaultValue(fields()[2]);
        record.targetId = fieldSetFlags()[3] ? this.targetId : (java.lang.String) defaultValue(fields()[3]);
        record.type = fieldSetFlags()[4] ? this.type : (java.lang.String) defaultValue(fields()[4]);
        record.image = fieldSetFlags()[5] ? this.image : (java.nio.ByteBuffer) defaultValue(fields()[5]);
        record.imageContentType = fieldSetFlags()[6] ? this.imageContentType : (java.lang.String) defaultValue(fields()[6]);
        record.date = fieldSetFlags()[7] ? this.date : (java.lang.Long) defaultValue(fields()[7]);
        record.receiverId = fieldSetFlags()[8] ? this.receiverId : (java.lang.String) defaultValue(fields()[8]);
        record.status = fieldSetFlags()[9] ? this.status : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Notification>
    WRITER$ = (org.apache.avro.io.DatumWriter<Notification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Notification>
    READER$ = (org.apache.avro.io.DatumReader<Notification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
